name: Deploy Jira Analytics Service

on:
  push:
    branches:
      - main


jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install Serverless Framework
        run: npm install -g serverless@3.33.0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Create artifact directory
        run: mkdir -p artifact

      - name: Package Lambda code with timestamp
        run: |
            TIMESTAMP=$(date +"%H%M%S")
            COMMIT_SHA=$(git rev-parse --short HEAD)
            VERSION=$(node -p "require('./package.json').version" || echo "1.0.0")
            
            # Create a unique filename with timestamp
            UNIQUE_ARCHIVE_NAME="jira-analytics_${TIMESTAMP}_${COMMIT_SHA}_v${VERSION}.zip"
            
            # Zip with the new unique name
            zip -r "artifacts/${UNIQUE_ARCHIVE_NAME}" . -x "node_modules/*" ".git/*" "artifacts/*"
            
            # Create metadata file
            echo "Deployment timestamp: $(date)" > "artifacts/${UNIQUE_ARCHIVE_NAME%.zip}_metadata.txt"
            echo "Commit: ${COMMIT_SHA}" >> "artifacts/${UNIQUE_ARCHIVE_NAME%.zip}_metadata.txt"
            echo "Version: ${VERSION}" >> "artifacts/${UNIQUE_ARCHIVE_NAME%.zip}_metadata.txt"
            echo "Branch: ${{ github.ref_name }}" >> "artifacts/${UNIQUE_ARCHIVE_NAME%.zip}_metadata.txt"
            echo "Function: analyzeTickets" >> "artifacts/${UNIQUE_ARCHIVE_NAME%.zip}_metadata.txt"
            
            # Save the name for later steps
            echo "UNIQUE_ARCHIVE_NAME=${UNIQUE_ARCHIVE_NAME}" >> $GITHUB_ENV

      - name: Upload to S3 with project and date organization
        run: |
          # Get project name from repository
          PROJECT_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2)
          
          # Create date-based folder structure (project/YYYY/MM/DD)
          YEAR_MONTH_DAY=$(date +"%Y/%m/%d")
          
          # Create the full S3 path
          S3_PATH="${PROJECT_NAME}/${YEAR_MONTH_DAY}/"
          
          # Upload with the structure you want
          aws s3 cp "artifacts/${UNIQUE_ARCHIVE_NAME}" "s3://${{ vars.LAMBDA_ARCHIVE_BUCKET }}/${S3_PATH}${UNIQUE_ARCHIVE_NAME}"
          aws s3 cp "artifacts/${UNIQUE_ARCHIVE_NAME%.zip}_metadata.txt" "s3://${{ vars.LAMBDA_ARCHIVE_BUCKET }}/${S3_PATH}${UNIQUE_ARCHIVE_NAME%.zip}_metadata.txt"
          
          # Log the location
          echo "Archived Lambda deployment to: s3://${{ vars.LAMBDA_ARCHIVE_BUCKET }}/${S3_PATH}${UNIQUE_ARCHIVE_NAME}"
      

      - name: Deploy
        run: serverless deploy function -f analyzeTickets